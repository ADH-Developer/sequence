version: "3"
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - 3000:3000
    container_name: sequence-api
    depends_on:
      - postgres
    networks:
      - backend
      - frontend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      DASHBOARD_URL: ${PROD_UI_URL:-http://192.168.1.100:8000}
      DEV_UI_URL: ${DEV_UI_URL:-http://localhost:8000}
      DEV_API_URL: ${DEV_API_URL:-http://localhost:3000}
      PROD_UI_URL: ${PROD_UI_URL:-http://192.168.1.100:8000}
      PROD_API_URL: ${PROD_API_URL:-http://192.168.1.100:3000}
  postgres:
    image: postgres:11
    networks:
      - backend
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: sequence
    volumes:
      - postgres_data:/var/lib/postgresql/data
  redis:
    image: redis
    networks:
      - backend
    ports:
      - "6379:6379"
    expose:
      - 6379
  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://192.168.1.100:3000}
        NEXT_PRIVATE_API_URL: ${NEXT_PRIVATE_API_URL:-http://api:3000/graphql}
    ports:
      - "8000:8000"
    container_name: sequence-ui
    networks:
      - frontend
    environment:
      PORT: 8000
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://192.168.1.100:3000}
      DEV_UI_URL: ${DEV_UI_URL:-http://localhost:8000}
      DEV_API_URL: ${DEV_API_URL:-http://localhost:3000}
      PROD_UI_URL: ${PROD_UI_URL:-http://192.168.1.100:8000}
      PROD_API_URL: ${PROD_API_URL:-http://192.168.1.100:3000}
    expose:
      - 8000
networks:
  frontend:
  backend:
volumes:
  postgres_data:
