# Install dependencies for all subprojects
FROM node:alpine AS base
WORKDIR /app
# Install 'libc6-compat'
RUN apk add --no-cache libc6-compat
WORKDIR /app/packages/api
# Install dependencies
COPY packages/api/package.json packages/api/yarn.lock ./
RUN yarn install --frozen-lockfile
WORKDIR /app/packages/common
# Install dependencies
COPY packages/common/package.json packages/common/yarn.lock ./
RUN yarn install --frozen-lockfile

# Build API
FROM node:alpine AS api-builder
WORKDIR /app/packages/api
COPY /packages/api /app/packages/api
COPY /packages/common /app/packages/common
COPY --from=base /app/packages/api/node_modules ./node_modules
COPY --from=base /app/packages/common/node_modules /app/packages/common/node_modules
RUN yarn build && yarn install --production --ignore-scripts --prefer-offline

# Production image, copy all the files and run next
FROM node:alpine AS runner
WORKDIR /app/packages/api
# Copy only necessary files
COPY --from=api-builder --chown=node /app/packages/api/dist ./dist
# COPY --from=api-builder /app/packages/api/.env ./.env
COPY --from=api-builder /app/packages/api/src/config/config.js ./src/config/config.js
COPY --from=api-builder /app/packages/api/src/migrations ./src/migrations
COPY --from=api-builder /app/packages/api/scripts ./scripts
COPY --from=api-builder /app/packages/api/package.json ./package.json
COPY --from=api-builder /app/packages/api/tsconfig.json ./tsconfig.json
COPY --from=api-builder /app/packages/api/.sequelizerc ./.sequelizerc
COPY --from=api-builder /app/packages/api/node_modules ./node_modules
USER node
ARG PORT=3000
ENV NODE_ENV production
ENV PORT $PORT
EXPOSE $PORT
CMD ["yarn", "migrate-and-start"]
